// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`HttpInterfaceVisitor > should handle array return type 1`] = `
"\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
const r2don_http_module_1 = require(\\"@r2don/nest-http-interface\\");
const nest_http_interface_1 = require(\\"@r2don/nest-http-interface\\");
class ResponseClass {
}
let UserService = class UserService {
    async getUsers() {
        throw new Error('not implemented');
    }
    async getUserList() {
        throw new Error('not implemented');
    }
    async getUsersReadonly() {
        throw new Error('not implemented');
    }
};
__decorate([
    (0, nest_http_interface_1.GetExchange)(),
    r2don_http_module_1.ResponseBody(ResponseClass)
], UserService.prototype, \\"getUsers\\", null);
__decorate([
    (0, nest_http_interface_1.GetExchange)(),
    r2don_http_module_1.ResponseBody(ResponseClass)
], UserService.prototype, \\"getUserList\\", null);
__decorate([
    (0, nest_http_interface_1.GetExchange)(),
    r2don_http_module_1.ResponseBody(ResponseClass)
], UserService.prototype, \\"getUsersReadonly\\", null);
UserService = __decorate([
    (0, nest_http_interface_1.HttpInterface)()
], UserService);
"
`;

exports[`HttpInterfaceVisitor > should ignore if file name is not match 1`] = `
"\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
const nest_http_interface_1 = require(\\"@r2don/nest-http-interface\\");
class ResponseClass {
}
let UserService = class UserService {
    async getUser() {
        throw new Error('not implemented');
    }
};
__decorate([
    (0, nest_http_interface_1.GraphQLExchange)()
], UserService.prototype, \\"getUser\\", null);
UserService = __decorate([
    (0, nest_http_interface_1.HttpInterface)()
], UserService);
"
`;

exports[`HttpInterfaceVisitor > should ignore if method has ResponseBody decorator 1`] = `
"\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
const nest_http_interface_1 = require(\\"@r2don/nest-http-interface\\");
const user_entity_1 = require(\\"./user.entity\\");
let UserService = class UserService {
    async getUser() {
        throw new Error('not implemented');
    }
};
__decorate([
    (0, nest_http_interface_1.PostExchange)(),
    (0, nest_http_interface_1.ResponseBody)(user_entity_1.User)
], UserService.prototype, \\"getUser\\", null);
UserService = __decorate([
    (0, nest_http_interface_1.HttpInterface)()
], UserService);
"
`;

exports[`HttpInterfaceVisitor > should ignore if return type if not a promise  1`] = `
"\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
const nest_http_interface_1 = require(\\"@r2don/nest-http-interface\\");
let UserService = class UserService {
    getUser() {
        throw new Error('not implemented');
    }
};
__decorate([
    (0, nest_http_interface_1.GetExchange)()
], UserService.prototype, \\"getUser\\", null);
UserService = __decorate([
    (0, nest_http_interface_1.HttpInterface)()
], UserService);
"
`;

exports[`HttpInterfaceVisitor > should ignore if return type is not a class 1`] = `
"\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
const nest_http_interface_1 = require(\\"@r2don/nest-http-interface\\");
let TextService = class TextService {
    constructor() { }
    async getText() {
        return 'text';
    }
};
__decorate([
    (0, nest_http_interface_1.GetExchange)()
], TextService.prototype, \\"getText\\", null);
TextService = __decorate([
    (0, nest_http_interface_1.HttpInterface)()
], TextService);
"
`;

exports[`HttpInterfaceVisitor > should override plugin suffix option 1`] = `
"\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
const r2don_http_module_1 = require(\\"@r2don/nest-http-interface\\");
const nest_http_interface_1 = require(\\"@r2don/nest-http-interface\\");
class ResponseClass {
}
let UserService = class UserService {
    async getUser() {
        throw new Error('not implemented');
    }
};
__decorate([
    (0, nest_http_interface_1.GraphQLExchange)(),
    r2don_http_module_1.ResponseBody(ResponseClass)
], UserService.prototype, \\"getUser\\", null);
UserService = __decorate([
    (0, nest_http_interface_1.HttpInterface)()
], UserService);
"
`;
